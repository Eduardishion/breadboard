<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <title>breadboard</title>
    <link href="/css/fontawesome.min.css" rel="stylesheet">
    <link href="/css/solid.min.css" rel="stylesheet">
    <link href="/css/regular.min.css" rel="stylesheet">
    <link href="/css/brands.min.css" rel="stylesheet">
    <link href="./global.css" rel="stylesheet" />
    </style>
  </head>
  <body>
    <div id='bar'></div>
    <nav class="<%=platform%>">
      <a class='btn' href="/" class='btn'><i class="fa-solid fa-house"></i></a>
      <button id='prev'><i class="fa-solid fa-chevron-left"></i></button>
      <button id='next'><i class="fa-solid fa-chevron-right"></i></button>
      <a class='btn' href="/favorites"><i class="fa-solid fa-star"></i></a>
      <div class='status'></div>
      <input type='search' placeholder='search' class='search flexible'>
      <a class='btn' href="/help"><i class="fa-solid fa-question"></i></a>
      <a class='btn' href="/settings"><i class="fa-solid fa-gear"></i></a>
      <button id='notification' class= 'hidden'><i class="fa-solid fa-bell"></i></button>
    </nav>
    <div class='help'>
      <main>
        <div class='header'>
          <h2>Getting Started</h2>
        </div>
        <div class='rows'>
          <a href="https://breadboard.me" target="_blank" class='item'><b><i class="fa-solid fa-book"></i> Breadboard Manual</b>: Learn how to use breadboard</a>
        </div>
        <br><br>
        <div class='header'>
          <h2>Help</h2>
        </div>
        <div class='rows'>
          <% items.forEach((item) => { %>
            <a class="item" href="<%=item.href%>" target="_blank">
              <div><b><i class="<%=item.icon%>"></i> <%=item.name%></b>: <%=item.description%></div>
            </a>
          <% }) %>
        </div>
      </main>
    </div>
    <script src="./dexie.js"></script>
    <script>
    let db;
    const init_db = async () => {
      db = new Dexie("breadboard")
      db.version(1).stores({
        files: "file_path, agent, model_name, root_path, prompt, btime, mtiime. *tokens",
        folders: "&name",
        checkpoints: "&root_path, btime",
        settings: "key, val",
        favorites: "query"
      })
    }
    const init_theme = async () => {
      let theme = await db.settings.where({ key: "theme" }).first()
      if (!theme) theme = { val: "default" }
      document.body.className = theme.val
    }
    (async () => {
      await init_db()
      await init_theme()
    })();
    </script>
  </body>
</html>
